name: Deploy TaskControl
on:
  push:
    branches: [ github_feature ]
  pull_request:
    branches: [ github_feature ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name | lower }}:latest
#    strategy:
#      matrix:
#        python-version: [3.11]
#    steps:
#      - name: Get repository code
#        uses: actions/checkout@v4
#      - name: Install python ${{ matrix.python-version }}
#        uses: actions/setup-python@v4
#        with:
#          python-version: ${{ matrix.python-version }}
#      - name: Install pipx
#        run: |
#          pip install pipx
#          pipx ensurepath
#      - name: Install poetry
#        run: pipx install poetry
#      - name: Install dependencies
#        run: poetry install --no-root
#      - name: Start Docker Compose
#        uses: isbang/compose-action@v1.5.1
#        with:
#          compose-file: docker-compose.yaml
#          down-flags: "--volumes"
#          service: database_test
#          detach: true
#      - name: Delay for database initialization
#        run: sleep 10
#      - name: Test app
#        run: poetry run pytest -v
#      - name: Test linter
#        run: poetry run flake8 .


